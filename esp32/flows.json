[
    {
        "id": "64ab4eb8dc279b95",
        "type": "tab",
        "label": "Fluxo 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "aa96dd3931ea2579",
        "type": "mqtt in",
        "z": "64ab4eb8dc279b95",
        "name": "",
        "topic": "esp32/temperatura",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "291bd1cf63a653b3",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 140,
        "wires": [
            [
                "0ace4cc8fbaf1650"
            ]
        ]
    },
    {
        "id": "92f7e242e5b45c8d",
        "type": "mqtt in",
        "z": "64ab4eb8dc279b95",
        "name": "",
        "topic": "esp32/umidade",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "291bd1cf63a653b3",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 260,
        "y": 260,
        "wires": [
            [
                "3edb8ccb7fce60f2",
                "ede4e49d09925df3"
            ]
        ]
    },
    {
        "id": "0ace4cc8fbaf1650",
        "type": "function",
        "z": "64ab4eb8dc279b95",
        "name": "function 1",
        "func": "\nlet last_reading = flow.get(\"last_temp\") || 999;\n\nif (Math.abs(last_reading - msg.payload) < 2) {\n    console.log('não enviou', msg.payload);\n    return null;\n}\n\nflow.set(\"last_temp\", msg.payload);\n\nmsg.payload = { temperature: msg.payload.toFixed(2) };\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 120,
        "wires": [
            [
                "6ec3f9eda22a28bc"
            ]
        ]
    },
    {
        "id": "6ec3f9eda22a28bc",
        "type": "mqtt out",
        "z": "64ab4eb8dc279b95",
        "name": "",
        "topic": "v1/devices/me/telemetry",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7424ace1c4ee640d",
        "x": 750,
        "y": 200,
        "wires": []
    },
    {
        "id": "3edb8ccb7fce60f2",
        "type": "function",
        "z": "64ab4eb8dc279b95",
        "name": "function 2",
        "func": "let readings = flow.get(\"humidity_readings\") || [];\n\nreadings.push(msg.payload);  // Add current reading\n\nif (readings.length > 10) {\n    readings.shift(); // Remove oldest reading to keep only 200\n}\n\n// Store updated list\nflow.set(\"humidity_readings\", readings);\n\n// Only send average when we have 200 readings\nif (readings.length === 10) {\n    let last_reading = flow.get(\"last_reading\") || 999;\n\n    let soma = readings.reduce((a, b) => a + b, 0);\n    let media = soma / readings.length;\n    let valor = 100 - (media / 4095) * 100;\n\n    if (Math.abs(last_reading - valor) < 2) {\n        console.log('não enviou', valor);\n        return null;\n    }\n\n    flow.set(\"humidity_readings\", []);\n    flow.set(\"last_reading\", valor);\n    msg.payload = { umidade: valor.toFixed(2) };\n    return msg;\n}\n\nreturn null; // Don’t send anything yet\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 260,
        "wires": [
            [
                "6ec3f9eda22a28bc",
                "f72adcb47ff7c7be"
            ]
        ]
    },
    {
        "id": "f72adcb47ff7c7be",
        "type": "debug",
        "z": "64ab4eb8dc279b95",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 360,
        "wires": []
    },
    {
        "id": "ede4e49d09925df3",
        "type": "debug",
        "z": "64ab4eb8dc279b95",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 420,
        "wires": []
    },
    {
        "id": "291bd1cf63a653b3",
        "type": "mqtt-broker",
        "name": "teste",
        "broker": "localhost",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "7424ace1c4ee640d",
        "type": "mqtt-broker",
        "name": "thingsboard",
        "broker": "demo.thingsboard.io",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]